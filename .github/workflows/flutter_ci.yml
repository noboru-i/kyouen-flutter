name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.1'
        channel: 'stable'
        cache: true
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Generate required files
      run: |
        # Create a mock firebase_options.dart for CI if it doesn't exist
        if [ ! -f "lib/firebase_options.dart" ]; then
          mkdir -p lib
          cat > lib/firebase_options.dart << 'EOF'
        // Mock firebase options for CI
        import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
        import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;
        
        class DefaultFirebaseOptions {
          static FirebaseOptions get currentPlatform {
            if (kIsWeb) return web;
            switch (defaultTargetPlatform) {
              case TargetPlatform.android: return android;
              case TargetPlatform.iOS: return ios;
              default: throw UnsupportedError('DefaultFirebaseOptions have not been configured for this platform.');
            }
          }
          static const FirebaseOptions web = FirebaseOptions(
            apiKey: 'mock-api-key',
            appId: 'mock-app-id',
            messagingSenderId: 'mock-sender-id',
            projectId: 'mock-project-id',
          );
          static const FirebaseOptions android = FirebaseOptions(
            apiKey: 'mock-api-key',
            appId: 'mock-app-id',
            messagingSenderId: 'mock-sender-id',
            projectId: 'mock-project-id',
          );
          static const FirebaseOptions ios = FirebaseOptions(
            apiKey: 'mock-api-key',
            appId: 'mock-app-id',
            messagingSenderId: 'mock-sender-id',
            projectId: 'mock-project-id',
            iosBundleId: 'mock-bundle-id',
          );
        }
        EOF
        fi
        
        # Generate build_runner files
        flutter pub run build_runner build --delete-conflicting-outputs
    
    - name: Analyze project source
      run: flutter analyze --fatal-infos
    
    - name: Check formatting
      run: dart format --output=none --set-exit-if-changed .
    
    - name: Run tests
      run: flutter test
    
    - name: Check build for Android
      run: flutter build apk --debug --target=lib/main.dart
    
    - name: Check build for Web
      run: flutter build web --target=lib/main.dart